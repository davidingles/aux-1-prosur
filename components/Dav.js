/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, PerspectiveCamera } from "@react-three/drei";

export function Dav(props) {
  const { nodes, materials } = useGLTF("/3D PROSUR.gltf");
  return (
    <group {...props} dispose={null} scale={.5}>
      {/* <pointLight
        intensity={144145.375}
        decay={5}
        position={[1000.5, 0, 0.01]}
        rotation={[-1.839, 0.602, 1.932]}
      /> */}
      <PerspectiveCamera
        makeDefault={false}
        far={100}
        near={0.1}
        fov={39.598}
        position={[0.488, 0.359, 0.344]}
        rotation={[-0.68, 0.795, 0.524]}
      />
      <group position={[0, 0.092, 0]} rotation={[-Math.PI, 0, -Math.PI]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["TQ_ARD-geom"].geometry}
          material={materials.TQ_ARD_front}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["TQ_ARD-geom_1"].geometry}
          material={materials["back-dil"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["TQ_ARD-geom_2"].geometry}
          material={materials.TQ_ARD_edge}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/3D PROSUR.gltf");
